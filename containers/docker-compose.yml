version: '3.8'

services:
  keycloak:
    build:
      context: ./keycloak
      dockerfile: Dockerfile
    container_name: keycloak
    ports:
      - "8090:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    volumes:
      - keycloak-data:/opt/keycloak/data

  mongo:
    build:
      context: ./mongodb
      dockerfile: Dockerfile
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  mongo-express:
    build:
      context: ./mongo-express
      dockerfile: Dockerfile
    ports:
      - "27000:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: "false"

  mysql:
    build:
      context: ./mysql
      dockerfile: Dockerfile
    container_name: mysql_container
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: imran
      MYSQL_PASSWORD: dev.imran
    ports:
      - "3300:3306"
    volumes:
      - db_data:/var/lib/mysql
  redis:
    build:
      context: ./redis
      dockerfile: Dockerfile
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
  prometheus:
    build:
      context: ./prometheus
      dockerfile: Dockerfile
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    network_mode: host
  grafana:
    build:
      context: ./grafana
      dockerfile: Dockerfile
    container_name: grafana
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    network_mode: host

volumes:
  keycloak-data:
  mongo-data:
  db_data:
  redis-data:
  grafana-data:
